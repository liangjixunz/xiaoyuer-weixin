var request = require("request"),
    fs = require("fs"),
    req_json = require("request-json");

var baseUrl = JSON.parse(fs.readFileSync(__dirname+"/../../../appConfig.json")).baseUrl;

var client = req_json.newClient(baseUrl+"/");
/*
*获取用户余额
* 需要参数openid
* 若正常回调，参数为余额
* 否则参数为-1
 */
function getBalance(openid,callback){
    var url = baseUrl + "/user/banlance.action?openid=" + openid;
    request(url,function(error,response,body){
        if (!error && response.statusCode==200){
            var resultObj =body;
            try{
                resultObj = JSON.parse(body);
            }
            catch (e){
                console.log(e);
            }
            if(resultObj.code ==0)
                callback("可用余额：" +resultObj.accountActive);

            else
                callback(-1);
        }
    })
}

/*
*用户扫描二维码之后的处理
* 不管是否关注，均传ticket和openid
* 若成功则返回{"code":1}
 */
function scanQR(openid,ticket,callback){
    var data = {
        openid:openid,
        ticket:ticket
    };
    client.post("reg/scan.action",data,function(error,response,body){
        console.log(body);
        if (!error && response.statusCode==200){
            try{
                var resultObj = JSON.parse(body);
            }
            catch (e){
                var resultObj = body;
            }
            callback(resultObj.code);
        }
    })
}
/*
*取消openid与小鱼儿账户的绑定
* 成功时返回-1
 */
function cancelBind(openid,callback){
    var data = {
        openid:openid
    }
    client.post("reg/unbind.action",data,function(error,response,body){
        console.log(body);
        if (!error && response.statusCode==200){
            try{
                var resultObj = JSON.parse(body);
            }
            catch(e){
                var resultObj = body;
            }
            if(error)
            {callback(-1000)}
            else
                callback(resultObj.code);
        }
    })
}

/*
*变更消息提醒状态
* 返回值为变更后的结果
*
 */
exports.remind = function(openid,callback){
    var url = baseUrl + "/user/message.action?openid=" + openid ;
    request(url,function(error,response,body){
        if (!error && response.statusCode==200){
            var resultObj = body;
            try{
                resultObj = JSON.parse(body);
            }
            catch (e){
                console.log(e);
            }
             if(resultObj.code == '0'){
                   var  isMessage = 1;
                   if(resultObj.result=="on")
                        isMessage = 0;
                  client.post("reg/message.action",{openid:openid,isMessage:isMessage},function(error,response,body1){
                      console.log(body1);
                      var resultObj1 = body1;
                      try{
                          resultObj1 = JSON.parse(body1);
                      }
                      catch (e){
                          console.log(e);
                      }
                      if(error){
                          callback(-1000)
                      }
                      else if(resultObj1.code=='0'){
                          callback( (function(){
                              if(isMessage)
                                return "on";
                              else
                                return 'off';
                          })() )
                      }
                      else{
                          callback(-1);
                      }
                  })
                }
            else{
                 callback(-1);
             }
            }

        else
                callback(-1);
    })
}
exports.getBalance = getBalance;
exports.scanQR = scanQR;
exports.cancelBind = cancelBind;